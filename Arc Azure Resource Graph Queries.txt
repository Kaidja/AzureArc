resources | where type == "microsoft.hybridcompute/machines"

resources | where type == "microsoft.hybridcompute/machines/extensions"

resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    )
    on ServerName

resources | where type == "microsoft.hybridcompute/machines"
| where properties.status == "Expired"

resources | where type == "microsoft.hybridcompute/machines"
| where properties.status == "Disconnected"

resources | where type == "microsoft.hybridcompute/machines"
| extend ConnectionStatus = properties.status
| where ConnectionStatus == "Disconnected"
| project name,ConnectionStatus

resources | where type == "microsoft.hybridcompute/machines"
| extend ConnectionStatus = properties.status
| where ConnectionStatus == "Connected"
| project name,ConnectionStatus

resources | where type == "microsoft.hybridcompute/machines"
| extend ConnectionStatus = properties.status
| where ConnectionStatus == "Expired"
| project name,ConnectionStatus

//Summarize by Extension name
resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    | extend Extension = name
    )
    on ServerName
| summarize Servers=make_set(ServerName) by ['Extension']

//Count extensions per server, group extensions and summarize by ServerName
resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    | extend Extension = name
    )
    on ServerName
| summarize
    ['Extensions Count']=dcount(Extension),
    ['List of Extensions']=make_set(Extension)
    by ServerName

resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    | extend Extension = name
    )
    on ServerName
| where Extension == "MDE.Windows"

resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    | extend Extension = name
    )
    on ServerName
| where Extension == "MicrosoftMonitoringAgent"


resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    | extend Extension = name
    )
    on ServerName
| where Extension == "AdminCenter"


resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    | extend Extension = name
    )
    on ServerName
| where Extension == "WindowsOsUpdateExtension"


resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    | extend Extension = name
    )
    on ServerName
| where Extension == "HybridWorkerExtension"

//List all unqiue Extensions
resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    | extend Extension = name
    )
    on ServerName
| distinct Extension

//List all exentions by version number
resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    | extend Extension = name
    | extend Version = properties.typeHandlerVersion
    )
    on ServerName
| project ServerName,Extension,Version

//Count how many different versions of extensions are deployed
resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    | extend Extension = name
    | extend Version = properties.typeHandlerVersion
    )
    on ServerName
| summarize
    ['Extensions Count']=dcount(ServerName),
    ['Extension Versions']=make_set(Version)
    by Extension


//Get all failed extensions
resources | where type == "microsoft.hybridcompute/machines"
| project ServerName = tostring(name)
| join kind = inner ( resources 
    | where type == "microsoft.hybridcompute/machines/extensions" 
    | extend ServerName = tostring(split(tostring(id),"/",8)[0])
    | extend Extension = name
    | extend Version = properties.typeHandlerVersion
    | extend Status = properties.provisioningState
    )
    on ServerName
| where Status == "Failed"
| project ServerName, Extension,Status,Version

//Count Azure Arc connected nodes OS Type
resources | where type == "microsoft.hybridcompute/machines"
| extend OSType = properties.osName
| project OSType
| summarize ["Total"] = count() by tostring(OSType)

//List all Azure Arc connected nodes Name,OSversion,OSSku
resources | where type == "microsoft.hybridcompute/machines"
| extend ServerName = name
| extend OSversion = properties.osVersion
| extend OSSku = properties.osSku
| project ServerName, OSversion,OSSku

//Get the Azure Arc connected nodes Guest Configuration Services Status
resources | where type == "microsoft.hybridcompute/machines"
| extend ServerName = name
| extend ["Guest Configuration Service Status"] = properties.serviceStatuses.guestConfigurationService.status
| extend ["Guest Configuration Service Startup Type"] = properties.serviceStatuses.guestConfigurationService.startupType
| extend ["Extension Service Status"] = properties.serviceStatuses.extensionService.status
| extend ["Extension Service Startup Type"] = properties.serviceStatuses.extensionService.startupType
| project ServerName,['Guest Configuration Service Status'],['Guest Configuration Service Startup Type'],['Extension Service Status'],['Extension Service Startup Type']

//List Azure Arc connected nodes agent version
resources | where type == "microsoft.hybridcompute/machines"
| extend ServerName = name
| extend ["Agent Version"] = properties.agentVersion
| project ServerName,['Agent Version']

//Get the Last Status Change and calculate how many days offline.
resources | where type == "microsoft.hybridcompute/machines"
| extend  ServerName = tostring(name)
| extend  ["Last Status Change"] = format_datetime(make_datetime(properties.lastStatusChange),'d.MM.yyyy HH:ss')
| extend ["Days Offline"] = datetime_diff('day',now(),make_datetime(properties.lastStatusChange))
| extend ["Requires Administrator to FIX"] = iif(['Days Offline'] > 45, "If a machine remains disconnected for 45 days, its status may change to Expired. An expired machine can no longer connect to Azure and requires a server administrator to disconnect and then reconnect it to Azure to continue managing it with Azure Arc","All OK")
| project ServerName,['Last Status Change'],['Days Offline'],['Requires Administrator to FIX']
| order by ['Requires Administrator to FIX'] asc
